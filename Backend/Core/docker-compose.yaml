services:
  ship__api:
    container_name: ${API__HOST}
    build:
      context: .
      dockerfile: docker/api/Dockerfile

    restart: unless-stopped

    env_file:
      - .env
    depends_on:
      - ship__postgres
      - ship__postgres__migrations
      - ship__redis
      - ship__minio
      - ship__minio__migrations
      - ship__rabbitmq
      - ship__rabbitmq__init
    ports:
      - ${API__PORT}:5000

    command: [
      "poetry", "run", "uvicorn", "app:create_app",
      "--host", "0.0.0.0",
      "--port", "5000",
      "--log-level", "debug",
      "--factory",
      "--reload",
    ]
    volumes:
      - ./app:/usr/src/app/app

  ship__postgres:
    container_name: ${POSTGRES__HOST}
    build:
      context: .
      dockerfile: docker/postgresql/Dockerfile

    restart: unless-stopped

    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES__PASSWORD}
      - POSTGRES_USER=${POSTGRES__USER}
      - POSTGRES_DATABASES="test_${POSTGRES__DATABASE_NAME}","${POSTGRES__DATABASE_NAME}"
    ports:
      - ${POSTGRES__PORT}:5432
    volumes:
      - ship__postgres_data:/var/lib/postgresql/data

  ship__postgres__migrations:
    container_name: ${POSTGRES__HOST}__migrations
    build:
      context: .
      dockerfile: docker/migrations/Dockerfile
    env_file:
      - .env
    environment:
      - POSTGRES__HOST=${POSTGRES__HOST}
      - POSTGRES__PORT=5432
    depends_on:
      - ship__postgres
    command: [
        "bash", "./scripts/wait-for-server.sh", "ship__postgres:5432", "-t", "120",
        "--",
        "poetry", "run", "python", "-m", "scripts.migrate"
    ]

  ship__redis:
    container_name: ${REDIS__HOST}
    build:
      context: .
      dockerfile: docker/redis/Dockerfile
      args:
        REDIS_PASSWORD: ${REDIS__PASSWORD}
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${REDIS__PORT}:6379
    volumes:
      - ship__redis_data:/data


  ship__minio:
    container_name: ${MINIO__HOST}
    hostname: ${MINIO__HOST}
    build:
      context: .
      dockerfile: docker/minio/Dockerfile

    restart: unless-stopped
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${S3__ROOT_USER}
      - MINIO_ROOT_PASSWORD=${S3__ROOT_PASSWORD}
      - MINIO_ACCESS_LOG=on
      - MINIO_AUDIT_LOG=on
    ports:
      - ${MINIO__PORT}:9000
      - ${MINIO__CONSOLE_PORT}:9001
    volumes:
      - ship__minio_data:/data
    command: ["server", "/data", "--console-address", ":9001"]


  ship__minio__migrations:
    container_name: ${MINIO__HOST}__migrations
    build:
      context: .
      dockerfile: docker/migrations_minio/Dockerfile
    env_file:
      - .env
    environment:
      - MINIO_HOST=http://${MINIO__HOST}:9000
      - MINIO_ROOT_USER=${S3__ROOT_USER}
      - MINIO_ROOT_PASSWORD=${S3__ROOT_PASSWORD}
      - MINIO_MIGRATION_DIR=./migrations_minio/
    depends_on:
      - ship__minio
    command: [
      "bash", "./scripts/wait-for-server.sh", "ship__minio:9000", "-t", "120",
      "--",
      "python", "scripts/migrate_minio.py", "apply"
    ]

  ship__rabbitmq:
    container_name: ${RABBIT__HOST}
    hostname: ${RABBIT__HOST}
    image: rabbitmq:3.10.7-management
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_VHOST=${RABBIT__VIRTUAL_HOST}
      - RABBITMQ_DEFAULT_USER=${RABBIT__USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT__PASSWORD}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    ports:
      - ${RABBIT__PORT}:5672
      - ${RABBIT__CONSOLE_PORT}:15672
    volumes:
      - ship__rabbitmq_data:/var/lib/rabbitmq

  ship__rabbitmq__init:
    container_name: ${RABBIT__HOST}__init
    build:
      context: .
      dockerfile: docker/rabbit_init/Dockerfile
    env_file:
      - .env
    depends_on:
      - ship__rabbitmq
    command: [
      "bash", "./scripts/wait-for-server.sh", "ship__rabbitmq:5672", "-t", "120",
      "--",
      "poetry", "run", "python", "scripts/init_rabbit.py"
    ]

networks:
  default:
    name: shared-ship-network


volumes:
  ship__postgres_data:
  ship__redis_data:
  ship__minio_data:
  ship__rabbitmq_data:
